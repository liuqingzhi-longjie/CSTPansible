---
- name: check new application file
  stat:
    path: "{{ansible_env.HOME}}/upgrade/backup/{{version}}/new_application"
  register: new_application_status

- name: read new application file
  shell: |
      cat "{{ansible_env.HOME}}/upgrade/backup/{{version}}/new_application"  |grep -v grep
  register: new_application_file
  when: new_application_status.stat.exists


- name: clear new application
  block:
    - name: stop CSTP_Download_Server services
      shell: |
        source ~/.bash_profile;
        set -m; ./app.sh stop
      args:
        chdir:
          "{{ansible_env.HOME}}/imixapp/CSTP_Download_Server/"
      ignore_errors: true
      when: (new_application_file.stdout.find("CSTP_Download_Server/") != -1  )
    

    - name: delete CSTP_Download_Server directory
      file:
        path: "{{ansible_env.HOME}}/imixapp/CSTP_Download_Server"
        state: absent
      when: (new_application_file.stdout.find("CSTP_Download_Server/") != -1  )
  when: new_application_status.stat.exists

- name: check CSTP_Download_Server {{version}} backup
  stat: 
    path: "{{ansible_env.HOME}}/upgrade/backup/{{version}}/CSTP_Download_Server.tgz"
  register: CSTP_Download_Server_backup

- name: start rollback CSTP_Download_Server
  block:
    - name: stop CSTP_Download_Server services
      shell: |
        source ~/.bash_profile;
        set -m; ./app.sh stop
      args:
        chdir:
          "{{ansible_env.HOME}}/imixapp/CSTP_Download_Server/"
      ignore_errors: true
    
    

    
    - name: delete CSTP_Download_Server directory
      shell: |
        find {{ansible_env.HOME}}/imixapp/CSTP_Download_Server/*  -maxdepth 0  ! -path '{{ansible_env.HOME}}/imixapp/CSTP_Download_Server/Log*'  -exec     rm -rf {} \;
      ignore_errors: true

    
    
    
    - name: rollback CSTP_Download_Server app
      unarchive:
        src: "{{ansible_env.HOME}}/upgrade/backup/{{version}}/CSTP_Download_Server.tgz"
        dest: "{{ansible_env.HOME}}/imixapp/"
        remote_src: yes
        mode: 0755
    
    
    
    - name: start CSTP_Download_Server services
      shell: |
        source ~/.bash_profile;
        set -m; ./app.sh start
      args:
        chdir:
          "{{ansible_env.HOME}}/imixapp/CSTP_Download_Server/"
    
    - name: wait service start
      wait_for:
        timeout: 10
    
    - name: check CSTP_Download_Server services
      shell: |
        ps -ef | grep CSTP_Download_Server 
      register: CSTP_Download_Server_services
    
    - name: show CSTP_Download_Server services status
      debug:
        msg: "{{CSTP_Download_Server_services.stdout_lines}}"
    
  
  when: CSTP_Download_Server_backup.stat.exists



