---
- name: create {{version}} backup directory
  file:
    path: "{{ansible_env.HOME}}/upgrade/backup/{{version}}"
    state: directory


- name: stop CSTP_PROCESSOR services
  shell: |
    source ~/.bash_profile;
    set -m; ./app.sh stop
  args:
    chdir:
      "{{ansible_env.HOME}}/imixapp/CSTP_PROCESSOR/"
  ignore_errors: true

- name: check  CSTP_PROCESSOR app
  stat:
    path: "{{ansible_env.HOME}}/imixapp/CSTP_PROCESSOR"
  register: cstp_processor_status

- name: check CSTP_PROCESSOR backup
  stat:
    path: "{{ansible_env.HOME}}/upgrade/backup/{{version}}/CSTP_PROCESSOR_{{version}}"
  register: cstp_processor_backup_status



- name: backup CSTP_PROCESSOR
  shell: |

    tar -czf {{ansible_env.HOME}}/upgrade/backup/{{version}}/CSTP_PROCESSOR.tgz  CSTP_PROCESSOR --exclude=CSTP_PROCESSOR/Log/*
    touch {{ansible_env.HOME}}/upgrade/backup/{{version}}/CSTP_PROCESSOR_{{version}}
  args:
    chdir: "{{ansible_env.HOME}}/imixapp/"
  when: (cstp_processor_status.stat.exists) and (cstp_processor_backup_status.stat.exists == False)


- name: save new app name
  shell: |
    echo -e "CSTP_PROCESSOR/ \n" >> "{{ansible_env.HOME}}/upgrade/backup/{{version}}/new_application"
  when: cstp_processor_status.stat.exists == False

- name: create CSTP_PROCESSOR directory
  file:
    path: "{{ansible_env.HOME}}/imixapp/CSTP_PROCESSOR"
    state: directory



- name: rm CSTP_PROCESSOR old file
  file:
    path: "{{ansible_env.HOME}}/imixapp/CSTP_PROCESSOR/{{item}}"
    state: absent
  with_items:
      - cfg
      - lib


- name: update CSTP_PROCESSOR app
  shell: |
    cp -r  {{version_dir}}/{{version}}/imixapp/CSTP_PROCESSOR  {{ansible_env.HOME}}/imixapp/


- name: update CSTP_PROCESSOR cwap-context config
  replace:
    path: "{{ansible_env.HOME}}/imixapp/CSTP_PROCESSOR/cfg/cwap-context.properties"
    regexp: "^{{item.key}}.*"
    replace: "{{item.key}}={{item.value}}"
  with_items:
      - "{{CSTP_PROCESSOR_conf.cwap_context}}"



- name: update CSTP_PROCESSOR imt_emergency config
  replace:
    path: "{{ansible_env.HOME}}/imixapp/CSTP_PROCESSOR/cfg/imt_emergency.xml"
    regexp: "{{item.key}}.*1250"
    replace: "{{item.value}}"
  with_items:
      - "{{CSTP_PROCESSOR_conf.imt_emergency}}"



- name: update CSTP_PROCESSOR rmi config
  replace:
    path: "{{ansible_env.HOME}}/imixapp/CSTP_PROCESSOR/cfg/rmi.properties"
    regexp: "^{{item.key}}.*"
    replace: "{{item.key}}={{item.value}}"
  with_items:
      - "{{CSTP_PROCESSOR_conf.rmi}}"


- name: unix2dos config
  shell: |
     unix2dos ./*
  args:
    chdir: "{{ansible_env.HOME}}/imixapp/CSTP_PROCESSOR/cfg/"






- name: start CSTP_PROCESSOR services
  shell: |
    source ~/.bash_profile;
    set -m; ./app.sh start
  args:
    chdir:
      "{{ansible_env.HOME}}/imixapp/CSTP_PROCESSOR/"

- name: wait service start
  wait_for:
    timeout: 10

- name: check CSTP_PROCESSOR services
  shell: |
    ps -ef | grep CSTP_PROCESSOR |grep -iv grep 
  register: CSTP_PROCESSOR_services

- name: show CSTP_PROCESSOR services status
  debug:
    msg: "{{CSTP_PROCESSOR_services.stdout_lines}}"


