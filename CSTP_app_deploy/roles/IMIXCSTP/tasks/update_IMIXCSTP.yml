---
- name: create {{version}} backup directory
  file:
    path: "{{ansible_env.HOME}}/upgrade/backup/{{version}}"
    state: directory


- name: stop IMIXCSTP services
  shell: |
    source ~/.bash_profile;
    set -m; ./app.sh stop
  args:
    chdir:
      "{{ansible_env.HOME}}/imixapp/IMIXCSTP/"
  ignore_errors: true


- name: check  IMIXCSTP app
  stat:
    path: "{{ansible_env.HOME}}/imixapp/IMIXCSTP"
  register: imixcstp_status

- name: check IMIXCSTP backup
  stat:
    path: "{{ansible_env.HOME}}/upgrade/backup/{{version}}/IMIXCSTP_{{version}}"
  register: imixcstp_backup_status


- name: backup IMIXCSTP
  shell: |

    tar -czf {{ansible_env.HOME}}/upgrade/backup/{{version}}/IMIXCSTP.tgz  IMIXCSTP --exclude=IMIXCSTP/Log/*
    touch {{ansible_env.HOME}}/upgrade/backup/{{version}}/IMIXCSTP_{{version}}
  args:
    chdir: "{{ansible_env.HOME}}/imixapp/"
  when: (imixcstp_status.stat.exists) and (imixcstp_backup_status.stat.exists == False)


- name: save new app name
  shell: |
    echo -e "IMIXCSTP/ \n" >> "{{ansible_env.HOME}}/upgrade/backup/{{version}}/new_application"
  when: imixcstp_status.stat.exists == False

- name: create IMIXCSTP directory
  file:
    path: "{{ansible_env.HOME}}/imixapp/IMIXCSTP"
    state: directory



- name: rm IMIXCSTP old file
  file:
    path: "{{ansible_env.HOME}}/imixapp/IMIXCSTP/{{item}}"
    state: absent
  with_items:
      - cfg
      - lib


- name: update IMIXCSTP app
  shell: |
    cp -r  {{version_dir}}/{{version}}/imixapp/IMIXCSTP  {{ansible_env.HOME}}/imixapp/



- name: update IMIXCSTP cwap-context config
  replace:
    path: "{{ansible_env.HOME}}/imixapp/IMIXCSTP/cfg/cwap-context.properties"
    regexp: "^{{item.key}}.*"
    replace: "{{item.key}}={{item.value}}"
  with_items:
      - "{{IMIXCSTP_conf.cwap_context}}"



- name: update IMIXCSTP jmxserver_config config
  replace:
    path: "{{ansible_env.HOME}}/imixapp/IMIXCSTP/cfg/jmxserver_config.properties"
    regexp: "^{{item.key}}.*"
    replace: "{{item.value}}"
  with_items:
      - "{{IMIXCSTP_conf.jmxserver_config}}"


- name: unix2dos config
  shell: |
     unix2dos ./*
  args:
    chdir: "{{ansible_env.HOME}}/imixapp/IMIXCSTP/cfg/"



- name: start IMIXCSTP services
  shell: |
    source ~/.bash_profile;
    set -m; ./app.sh start
  args:
    chdir:
      "{{ansible_env.HOME}}/imixapp/IMIXCSTP/"

- name: wait service start
  wait_for:
    timeout: 10

- name: check IMIXCSTP services
  shell: |
    ps -ef | grep CSTP_IMIX_CSTP |grep -iv grep 
  register: IMIXCSTP_services

- name: show IMIXCSTP services status
  debug:
    msg: "{{IMIXCSTP_services.stdout_lines}}"

