---
- name: create {{version}}  backup directory
  file:
    path: "{{ansible_env.HOME}}/upgrade/backup/{{version}}"
    state: directory


- name: stop cstp-dp-emergency services
  shell: |
    source ~/.bash_profile;
    set -m; sh ./app.sh stop
  args:
    chdir:
      "{{ansible_env.HOME}}/app-web/cstp-dp-emergency/bin/"
  ignore_errors: true


- name: check  cstp-dp-emergency app
  stat:
    path: "{{ansible_env.HOME}}/app-web/cstp-dp-emergency"
  register: cstp_dp_emergency_status

- name: check cstp-dp-emergency backup
  stat:
    path: "{{ansible_env.HOME}}/upgrade/backup/{{version}}/cstp-dp-emergency_{{version}}"
  register: cstp_dp_emergency_backup_status


- name: backup cstp-dp-emergency
  shell: |

    tar -czf {{ansible_env.HOME}}/upgrade/backup/{{version}}/cstp-dp-emergency.tgz  cstp-dp-emergency --exclude=cstp-dp-emergency/logs/*
    touch {{ansible_env.HOME}}/upgrade/backup/{{version}}/cstp-dp-emergency_{{version}}
  args:
    chdir: "{{ansible_env.HOME}}/app-web/"
  when: (cstp_dp_emergency_status.stat.exists) and (cstp_dp_emergency_backup_status.stat.exists == False)


- name: save new app name
  shell: |
    echo -e "cstp-dp-emergency/ \n" >> "{{ansible_env.HOME}}/upgrade/backup/{{version}}/new_application"
  when: cstp_dp_emergency_status.stat.exists == False

- name: create cstp-dp-emergency directory
  file:
    path: "{{ansible_env.HOME}}/app-web/cstp-dp-emergency"
    state: directory


- name: rm CSTP_DP_EMERGENCY old file
  file:
    path: "{{ansible_env.HOME}}/app-web/cstp-dp-emergency/{{item}}"
    state: absent
  with_items:
      - conf
      - lib


- name: update cstp-dp-emergency app
  shell: |
    cp -r  {{version_dir}}/{{version}}/app-web/cstp-dp-emergency  {{ansible_env.HOME}}/app-web/


- name: update cstp-dp-emergency rmi config
  replace:
    path: "{{ansible_env.HOME}}/app-web/cstp-dp-emergency/conf/rmi.properties"
    regexp: "^{{item.key}}.*"
    replace: "{{item.key}}={{item.value}}"
  with_items:
      - "{{cstp_dp_emergency_conf.rmi}}"


- name: unix2dos config
  shell: |
     unix2dos ./*
  args:
    chdir: "{{ansible_env.HOME}}/app-web/cstp-dp-emergency/conf/"



- name: start cstp-dp-emergency services
  shell: |
    source ~/.bash_profile;
    set -m; sh ./app.sh start
  args:
    chdir:
      "{{ansible_env.HOME}}/app-web/cstp-dp-emergency/bin/"
  when: slave == 'master'

- name: wait service start
  wait_for:
    timeout: 10
  when: slave == 'master'

- name: check cstp-dp-emergency services
  shell: |
    ps -ef | grep CSTP_EMERGENCY|grep -iv grep
  register: cstp_dp_emergency_services
  when: slave == 'master'

- name: show cstp-dp-emergency services status
  debug:
    msg: "{{cstp_dp_emergency_services.stdout_lines}}"
  when: slave == 'master'


